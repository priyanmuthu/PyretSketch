include "./sketchlib/list.skh";

List<int> empty_list(){
	return empty();
}

int max(int a, int b){
    return a > b ? a : b; 
}

// Replacement ??
generator int constgen(){
	return {|0|1|2|3|};
}

generator int variableIntgen(List<int> a){
	if(??){
        return ((Cons<int>)a).val;
    }
    return mylen(listgen(a));
}

generator int intgen(List<int> a, int bnd){
    if (bnd == 0){return constgen();}
	if(??){
        return {|constgen()|
				variableIntgen(a)|
				constgen() + intgen(a, bnd-1)|
				variableIntgen(a) + intgen(a, bnd-1)|
				max(intgen(a, bnd-1), intgen(a, bnd-1))|};
    }
}



generator List<int> listgen(List<int> a){
    if(??){
        return empty();
    }
    return ((Cons<int>)a).next;
}

int mylen(List<int> a) {
	if(a == empty_list()) {
		return intgen(a,2);
	}else {
        return intgen(a,2);
	}
}

harness void main() {
	List<int> a = empty();
	List<int> b = add(add(add(a,3), 4), 5);
	List<int> c = add(add(add(add(a,16), 14), 5), 1);
	List<int> d = add(add(add(add(a,18), 14), 15), 10);
	assert mylen(a) == 0;
	assert mylen(b) == 3;
	assert mylen(c) == 4;
	assert mylen(d) == 4;
}
